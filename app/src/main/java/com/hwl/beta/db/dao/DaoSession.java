package com.hwl.beta.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hwl.beta.db.entity.ChatGroupMessage;
import com.hwl.beta.db.entity.ChatRecordMessage;
import com.hwl.beta.db.entity.ChatUserMessage;
import com.hwl.beta.db.entity.Friend;
import com.hwl.beta.db.entity.FriendRequest;
import com.hwl.beta.db.entity.GroupInfo;
import com.hwl.beta.db.entity.GroupUserInfo;
import com.hwl.beta.db.entity.NearCircle;
import com.hwl.beta.db.entity.NearCircleComment;
import com.hwl.beta.db.entity.NearCircleImage;
import com.hwl.beta.db.entity.NearCircleLike;

import com.hwl.beta.db.dao.ChatGroupMessageDao;
import com.hwl.beta.db.dao.ChatRecordMessageDao;
import com.hwl.beta.db.dao.ChatUserMessageDao;
import com.hwl.beta.db.dao.FriendDao;
import com.hwl.beta.db.dao.FriendRequestDao;
import com.hwl.beta.db.dao.GroupInfoDao;
import com.hwl.beta.db.dao.GroupUserInfoDao;
import com.hwl.beta.db.dao.NearCircleDao;
import com.hwl.beta.db.dao.NearCircleCommentDao;
import com.hwl.beta.db.dao.NearCircleImageDao;
import com.hwl.beta.db.dao.NearCircleLikeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chatGroupMessageDaoConfig;
    private final DaoConfig chatRecordMessageDaoConfig;
    private final DaoConfig chatUserMessageDaoConfig;
    private final DaoConfig friendDaoConfig;
    private final DaoConfig friendRequestDaoConfig;
    private final DaoConfig groupInfoDaoConfig;
    private final DaoConfig groupUserInfoDaoConfig;
    private final DaoConfig nearCircleDaoConfig;
    private final DaoConfig nearCircleCommentDaoConfig;
    private final DaoConfig nearCircleImageDaoConfig;
    private final DaoConfig nearCircleLikeDaoConfig;

    private final ChatGroupMessageDao chatGroupMessageDao;
    private final ChatRecordMessageDao chatRecordMessageDao;
    private final ChatUserMessageDao chatUserMessageDao;
    private final FriendDao friendDao;
    private final FriendRequestDao friendRequestDao;
    private final GroupInfoDao groupInfoDao;
    private final GroupUserInfoDao groupUserInfoDao;
    private final NearCircleDao nearCircleDao;
    private final NearCircleCommentDao nearCircleCommentDao;
    private final NearCircleImageDao nearCircleImageDao;
    private final NearCircleLikeDao nearCircleLikeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chatGroupMessageDaoConfig = daoConfigMap.get(ChatGroupMessageDao.class).clone();
        chatGroupMessageDaoConfig.initIdentityScope(type);

        chatRecordMessageDaoConfig = daoConfigMap.get(ChatRecordMessageDao.class).clone();
        chatRecordMessageDaoConfig.initIdentityScope(type);

        chatUserMessageDaoConfig = daoConfigMap.get(ChatUserMessageDao.class).clone();
        chatUserMessageDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        friendRequestDaoConfig = daoConfigMap.get(FriendRequestDao.class).clone();
        friendRequestDaoConfig.initIdentityScope(type);

        groupInfoDaoConfig = daoConfigMap.get(GroupInfoDao.class).clone();
        groupInfoDaoConfig.initIdentityScope(type);

        groupUserInfoDaoConfig = daoConfigMap.get(GroupUserInfoDao.class).clone();
        groupUserInfoDaoConfig.initIdentityScope(type);

        nearCircleDaoConfig = daoConfigMap.get(NearCircleDao.class).clone();
        nearCircleDaoConfig.initIdentityScope(type);

        nearCircleCommentDaoConfig = daoConfigMap.get(NearCircleCommentDao.class).clone();
        nearCircleCommentDaoConfig.initIdentityScope(type);

        nearCircleImageDaoConfig = daoConfigMap.get(NearCircleImageDao.class).clone();
        nearCircleImageDaoConfig.initIdentityScope(type);

        nearCircleLikeDaoConfig = daoConfigMap.get(NearCircleLikeDao.class).clone();
        nearCircleLikeDaoConfig.initIdentityScope(type);

        chatGroupMessageDao = new ChatGroupMessageDao(chatGroupMessageDaoConfig, this);
        chatRecordMessageDao = new ChatRecordMessageDao(chatRecordMessageDaoConfig, this);
        chatUserMessageDao = new ChatUserMessageDao(chatUserMessageDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);
        friendRequestDao = new FriendRequestDao(friendRequestDaoConfig, this);
        groupInfoDao = new GroupInfoDao(groupInfoDaoConfig, this);
        groupUserInfoDao = new GroupUserInfoDao(groupUserInfoDaoConfig, this);
        nearCircleDao = new NearCircleDao(nearCircleDaoConfig, this);
        nearCircleCommentDao = new NearCircleCommentDao(nearCircleCommentDaoConfig, this);
        nearCircleImageDao = new NearCircleImageDao(nearCircleImageDaoConfig, this);
        nearCircleLikeDao = new NearCircleLikeDao(nearCircleLikeDaoConfig, this);

        registerDao(ChatGroupMessage.class, chatGroupMessageDao);
        registerDao(ChatRecordMessage.class, chatRecordMessageDao);
        registerDao(ChatUserMessage.class, chatUserMessageDao);
        registerDao(Friend.class, friendDao);
        registerDao(FriendRequest.class, friendRequestDao);
        registerDao(GroupInfo.class, groupInfoDao);
        registerDao(GroupUserInfo.class, groupUserInfoDao);
        registerDao(NearCircle.class, nearCircleDao);
        registerDao(NearCircleComment.class, nearCircleCommentDao);
        registerDao(NearCircleImage.class, nearCircleImageDao);
        registerDao(NearCircleLike.class, nearCircleLikeDao);
    }
    
    public void clear() {
        chatGroupMessageDaoConfig.clearIdentityScope();
        chatRecordMessageDaoConfig.clearIdentityScope();
        chatUserMessageDaoConfig.clearIdentityScope();
        friendDaoConfig.clearIdentityScope();
        friendRequestDaoConfig.clearIdentityScope();
        groupInfoDaoConfig.clearIdentityScope();
        groupUserInfoDaoConfig.clearIdentityScope();
        nearCircleDaoConfig.clearIdentityScope();
        nearCircleCommentDaoConfig.clearIdentityScope();
        nearCircleImageDaoConfig.clearIdentityScope();
        nearCircleLikeDaoConfig.clearIdentityScope();
    }

    public ChatGroupMessageDao getChatGroupMessageDao() {
        return chatGroupMessageDao;
    }

    public ChatRecordMessageDao getChatRecordMessageDao() {
        return chatRecordMessageDao;
    }

    public ChatUserMessageDao getChatUserMessageDao() {
        return chatUserMessageDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public FriendRequestDao getFriendRequestDao() {
        return friendRequestDao;
    }

    public GroupInfoDao getGroupInfoDao() {
        return groupInfoDao;
    }

    public GroupUserInfoDao getGroupUserInfoDao() {
        return groupUserInfoDao;
    }

    public NearCircleDao getNearCircleDao() {
        return nearCircleDao;
    }

    public NearCircleCommentDao getNearCircleCommentDao() {
        return nearCircleCommentDao;
    }

    public NearCircleImageDao getNearCircleImageDao() {
        return nearCircleImageDao;
    }

    public NearCircleLikeDao getNearCircleLikeDao() {
        return nearCircleLikeDao;
    }

}
